{"ast":null,"code":"import { Observable } from \"../../utilities/index.js\";\n/**\n * @deprecated `fromError` will be removed in Apollo Client 4.0. This is safe\n * to use in 3.x.\n *\n * **Recommended now**\n *\n * No action needed\n *\n * **When upgrading**\n *\n * Use RxJS's [`throwError`](https://rxjs.dev/api/index/function/throwError) function.\n *\n * ```ts\n * const observable = throwError(() => new Error(...));\n * ```\n */\nexport function fromError(errorValue) {\n  return new Observable(function (observer) {\n    observer.error(errorValue);\n  });\n}","map":{"version":3,"names":["Observable","fromError","errorValue","observer","error"],"sources":["/Users/lililyons/WebstormProjects/github-scanner/github-scanner-client/node_modules/@apollo/src/link/utils/fromError.ts"],"sourcesContent":["import { Observable } from \"../../utilities/index.js\";\n\n/**\n * @deprecated `fromError` will be removed in Apollo Client 4.0. This is safe\n * to use in 3.x.\n *\n * **Recommended now**\n *\n * No action needed\n *\n * **When upgrading**\n *\n * Use RxJS's [`throwError`](https://rxjs.dev/api/index/function/throwError) function.\n *\n * ```ts\n * const observable = throwError(() => new Error(...));\n * ```\n */\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>((observer) => {\n    observer.error(errorValue);\n  });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,0BAA0B;AAErD;;;;;;;;;;;;;;;;AAgBA,OAAM,SAAUC,SAASA,CAAIC,UAAe;EAC1C,OAAO,IAAIF,UAAU,CAAI,UAACG,QAAQ;IAChCA,QAAQ,CAACC,KAAK,CAACF,UAAU,CAAC;EAC5B,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}