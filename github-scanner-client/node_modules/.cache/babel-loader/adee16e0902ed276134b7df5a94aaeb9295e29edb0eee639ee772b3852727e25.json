{"ast":null,"code":"var _jsxFileName = \"/Users/lililyons/WebstormProjects/github-scanner/github-scanner-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\n\n// Apollo Client setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  // Your backend GraphQL endpoint\n  cache: new InMemoryCache()\n});\n\n// Example query\nconst GET_REPOS = gql`\n  query {\n    repositoryOwner(login: \"your-github-username\") {\n      repositories(first: 5) {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n`;\nfunction RepoList() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_REPOS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.repositoryOwner.repositories.nodes.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: repo.name\n    }, repo.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(RepoList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = RepoList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GitHub Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RepoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RepoList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","jsxDEV","_jsxDEV","client","uri","cache","GET_REPOS","RepoList","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","repositoryOwner","repositories","nodes","map","repo","name","_c","App","_c2","$RefreshReg$"],"sources":["/Users/lililyons/WebstormProjects/github-scanner/github-scanner-client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql,\n} from \"@apollo/client\";\n\n\n// Apollo Client setup\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/\", // Your backend GraphQL endpoint\n    cache: new InMemoryCache(),\n});\n\n// Example query\nconst GET_REPOS = gql`\n  query {\n    repositoryOwner(login: \"your-github-username\") {\n      repositories(first: 5) {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n`;\n\nfunction RepoList() {\n    const { loading, error, data } = useQuery(GET_REPOS);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    return (\n        <ul>\n            {data.repositoryOwner.repositories.nodes.map((repo) => (\n                <li key={repo.name}>{repo.name}</li>\n            ))}\n        </ul>\n    );\n}\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <div>\n                <h1>GitHub Repositories</h1>\n                <RepoList />\n            </div>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,QAAQ,EACRC,GAAG,QACA,gBAAgB;;AAGvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,IAAIP,YAAY,CAAC;EAC5BQ,GAAG,EAAE,wBAAwB;EAAE;EAC/BC,KAAK,EAAE,IAAIR,aAAa,CAAC;AAC7B,CAAC,CAAC;;AAEF;AACA,MAAMS,SAAS,GAAGN,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASO,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGZ,QAAQ,CAACO,SAAS,CAAC;EAEpD,IAAIG,OAAO,EAAE,oBAAOP,OAAA;IAAAU,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOR,OAAA;IAAAU,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACId,OAAA;IAAAU,QAAA,EACKD,IAAI,CAACO,eAAe,CAACC,YAAY,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC9CpB,OAAA;MAAAU,QAAA,EAAqBU,IAAI,CAACC;IAAI,GAArBD,IAAI,CAACC,IAAI;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACR,EAAA,CAbQD,QAAQ;EAAA,QACoBR,QAAQ;AAAA;AAAAyB,EAAA,GADpCjB,QAAQ;AAejB,SAASkB,GAAGA,CAAA,EAAG;EACX,oBACIvB,OAAA,CAACJ,cAAc;IAACK,MAAM,EAAEA,MAAO;IAAAS,QAAA,eAC3BV,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5Bd,OAAA,CAACK,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB;AAACU,GAAA,GATQD,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}